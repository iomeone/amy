# Demonstrate lambda lifting

main :: Int
main =
  let
    # Nested lift
    id x =
      let
        id' y = x
      in id' x

    # Depends on id
    const x y = id y

    # Needs closing
    z = 2
    f = iAdd# z

    # Mutually recursive, and needs closing
    a = 1
    g x = if iLessThan# x 0 then 100 else g' (iSub# x z)
    g' x = g ((\y -> iAdd# x y) a)
  in g (f (const 2 1))
